#!/bin/bash

# adds additional digital inputs and relay outputs to the Raspberry Pi platforms

# the stock RPI Venus distribution includes two relays and two digital inputs
# adding the additional GPIO pins to /etc/venus/gpio_list
# makes additional digital inputs available
# all 5 defined digital inputs are activated by this script
#
# the Raspberry PI default is for the first 8 GPIO pins to have pull UPs
# and the remaining have pull DOWNs. This makes some digital input pins behave differently
# this script also installs a DT overlay that switches to pull UPs for all digital input pins
#
# Only the first relay can be assigned to a function: alarm, genertor start/stop or pump.
# Others are only provided manual on/off control from the menu.
# Six relays are supported. Only the first relay can be assigned to functions
# The remaining relays are manual on/off only.

# run manually initally, then called from reinstallMods
# to uninstall/deactivate, call this script with "uninstall" as first parameter

# original assignments for relays 5 and 6 create conflicts with interrypt pins
#	on hat boards such as the Waveshare dual CANbus hats (regular and FD versions)
#	An option in this setup script allows selection of different GPIO assignments
#	for relays 5 and 6 to avoid these conflicts
#
#	Because this conflict will be rare, the option is considered optional.
#	That is, an automatic install WILL be permitted even if a manual install has not
#		been perfomred.
#
#	VeCanSetup will alert the user of conflicts and prevent installing the second
#		CANbus interface until this script is rerun to move the relay assignments.

# Note, this script DOES require a system reboot.

gpioListFile="/etc/venus/gpio_list"
overlayFile="/u-boot/overlays/VenusGpioOverlay.dtbo"
altOverlayFile="/u-boot/overlays/VenusGpioOverlayForCanHats.dtbo"
configFile="/u-boot/config.txt"

# no log file for this package
packageLogFile=""

#### following lines incorporate SetupHelper utilities into this script
# Refer to the SetupHelper ReadMe file for details.
    
source "/data/SetupHelper/CommonResources"

#### end of lines to include SetupHelper

####### this is duplicate to code in CommonResources -- keep in case SetupHelepr has not been updated
# prevent installing if not a Raspberry Pi
if [ -f /etc/venus/machine ]; then
    machine=$(cat /etc/venus/machine)
fi
if [ -z $machine ]; then
    if [ -f "$installedFlag" ]; then
        logMessage "can't determine Venus device type - uninstalling"
        scriptAction='UNINSTALL'
    else
        logMessage "can't determine Venus device type - exiting"
		exit $INCOMPATIBLE_PLATFORM
    fi
elif [ $machine != "raspberrypi2" ] && [ $machine != "raspberrypi4" ]; then
    if [ -f "$installedFlag" ]; then
        logMessage "$packageName not compatible with $machine - uninstalling"
        scriptAction='UNINSTALL'
    else
        logMessage "$packageName not compatible with $machine - exiting"
		exit $INCOMPATIBLE_PLATFORM
    fi
fi

#### running manually and OK to proceed - prompt for input
if [ $scriptAction == 'NONE' ] ; then
    # display innitial message
    echo
    echo "This package makes the following modifications:"
    echo "  Activates 6 relay outputs"
    echo "  Activates 5 digital inputs"
    echo "  Changes all digital inputs to have pull-ups in stead of a mix of pull up/down"

    standardActionPrompt 'MORE_PROMPTS'

    if [ $scriptAction == 'NONE' ]; then
		echo
		echo "Legacy assignment for relays 5 and 6 may conflict with interrupts for some CANbus interface hat boards"
		echo "Conflicts WILL render the Raspberry PI at least partially unresponsive"
		echo "To avoid conflicts, an alternate set of GPIO assignments is available"

		useCustomGpioFile=false
		if [ -f "$setupOptionsDir/gpio_list" ]; then
			yesNoPrompt "A custom gpio_list file exists - use it (y/n)?: "
			if $yesResponse ; then
				echo "CAUTION: manually check custom gpio_list and GPIO overlay for conflicts"
				useCustomGpioFile=true
			else
				rm "$setupOptionsDir/gpio_list"
			fi
		fi
		if ! $useCustomGpioFile ; then
			echo
			yesNoPrompt "Do you wish to install the alternate set of GPIO assignments (y/n)?: "
			if $yesResponse ; then
				touch "$setupOptionsDir/alternateGpio"
			else
				rm -f "$setupOptionsDir/alternateGpio"
			fi
		fi

		scriptAction='INSTALL'
	fi
fi
#### installing
if [ $scriptAction == 'INSTALL' ] ; then

	# use custom GPIO list if present
	if [ -f "$setupOptionsDir/gpio_list" ]; then
		logMessage "installing CUSTOM gpio_list"
		updateActiveFile "$setupOptionsDir/gpio_list" "$gpioListFile"
	# use a alternate gpio list if option is set
	elif [ -f "$setupOptionsDir/alternateGpio" ]; then
		logMessage "installing ALTERNATE gpio_list"
		updateActiveFile "$pkgFileSets/gpio_listForCanHats" "$gpioListFile"
	# otherwise use a legacy gpio list
	else
		logMessage "installing LEGACY gpio_list"
		updateActiveFile "$gpioListFile"
	fi

	# install / update GPIO overlay
	# there are two overlays, make sure the "other" one is removed from config.txt
	if [ -f "$setupOptionsDir/alternateGpio" ]; then
		updateActiveFile "$altOverlayFile"
		gpioOverlay="VenusGpioOverlayForCanHats"
		if [ $(grep -c "VenusGpioOverlay" "$configFile") == 0 ]; then
            sed -i -e '/#### change all digital inputs to pull ups/,/#### end change all digital inputs to pull ups/d' "$configFile"
		fi
	else
		updateActiveFile "$overlayFile"
		gpioOverlay="VenusGpioOverlay"
		if [ $(grep -c "VenusGpioOverlayForCanHats" "$configFile") > 0 ]; then
            sed -i -e '/#### change all digital inputs to pull ups/,/#### end change all digital inputs to pull ups/d' "$configFile"
		fi
	fi
	
	if [ $(grep -c "#### change all digital inputs to pull ups" "$configFile") == 0 ]; then
		logMessage "activating $gpioOverlay"
		echo "#### change all digital inputs to pull ups" >> "$configFile"
		echo "dtoverlay=$gpioOverlay" >> "$configFile"
		echo "#### end change all digital inputs to pull ups" >> "$configFile"
		filesUpdated=true
	fi
fi

# uninstalling - check scriptAction again
# if an install step failed package needs to be removed
if [ $scriptAction == 'UNINSTALL' ] ; then

    # remove mods from configFile - do not use restore in case other mods were made manually
    if [ -f "$configFile" ]; then
        if [ $(grep -c "#### change all digital inputs to pull ups" "$configFile") != 0 ]; then
            sed -i -e '/#### change all digital inputs to pull ups/,/#### end change all digital inputs to pull ups/d' "$configFile"
            filesUpdated=true
        fi
    fi
fi

if $filesUpdated ; then
    rebootNeeded=true
fi

# thats all folks - SCRIPT EXITS INSIDE THE FUNCTION
endScript 'INSTALL_FILES'

